.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba($color-black, 0.5);
  background-color: rgba($color-white, 0.5);
  border-radius: 3px;
  padding: 6rem;
  padding-left: 9rem;
  font-size: $default-font-size;
  transform: skewX(-12deg);

  @include respond(tab-port) {
    width: 100%;
    padding: 4rem;
    padding-left: 7rem;
  }

  @include respond(phone) {
    transform: skewX(0);
  }

  &__shape {
    width: 15rem;
    height: 15rem;
    float: left;
    // Shape-outside is to get text to wrap around a shape
    -webkit-shape-outside: circle(50% at 50% 50%);
    shape-outside: circle(
      50% at 50% 50%
    ); //only works if floated and has height/width defined.
    // circle() is used here because border-radius would not work with "shape-outside"

    transform: translateX(-3rem) skewX(12deg); //don't use margin on floated elements, use transform
    position: relative;
    overflow: hidden; // this is in case clip path is not supported (Firefox) and images spill out of __shape

    @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
      -webkit-clip-path: circle(50% at 50% 50%);
      clip-path: circle(50% at 50% 50%);
    }

    @include respond(phone) {
      transform: translateX(-3rem) skewX(0);
    }
  }

  &__img {
    height: 100%;
    transform: translateX(-4rem) scale(1.4);
    transition: all 0.5s;
    backface-visibility: hidden; // fix shape issue from transform
  }

  &__text {
    transform: skewX(12deg);

    @include respond(phone) {
      transform: skewX(0);
    }
  }

  &__caption {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, 20%);
    color: $color-white;
    text-transform: uppercase;
    font-size: 1.7rem;
    text-align: center;
    opacity: 0;
    transition: all 0.5s;
    backface-visibility: hidden; //fix shake issue from transform
  }

  &:hover &__caption {
    // it means when we hover we are adding the properties to &__caption
    opacity: 1;
    transform: translate(-50%, -50%);
  }

  &:hover &__img {
    transform: translateX(-4rem) scale(1);
    filter: brightness(80%) blur(3px);
    // filter property defines visual effects (like blur and saturation) to an element (often <img>)
  }
}
